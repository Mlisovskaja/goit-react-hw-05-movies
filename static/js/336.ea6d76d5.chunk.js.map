{"version":3,"file":"static/js/336.ea6d76d5.chunk.js","mappings":"uQAiCA,EA/ByB,SAAH,GAAsB,IAAhBA,EAAQ,EAARA,SAC1B,GAA0BC,EAAAA,EAAAA,UAAS,IAAG,eAA/BC,EAAK,KAAEC,EAAQ,KAYtB,OACE,0BACE,kBAAMH,SARW,SAAAI,GACnBA,EAAEC,iBAEFL,EAASE,EACX,EAIiC,WAC3B,mBAAQI,KAAK,SAAQ,SAAC,YAEtB,kBACEA,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,SApBa,SAAAN,GACnBD,EAASC,EAAEO,OAAOC,MACpB,EAmBQA,MAAOV,QAKjB,ECiBA,EA1CmB,WACjB,OAA0BD,EAAAA,EAAAA,UAAS,IAAG,eAA/BY,EAAK,KAAEC,EAAQ,KACtB,GAA0Bb,EAAAA,EAAAA,UAAS,MAAK,eAAjCc,EAAK,KAAEC,EAAQ,KACtB,GAAwCC,EAAAA,EAAAA,MAAiB,eAAlDC,EAAY,KAAEC,EAAe,KAC9BC,EAAYF,EAAaG,IAAI,SAE7BC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,GAAKJ,EAAL,CAGA,IAAMK,EAAW,mCAAG,8GAEGC,EAAAA,EAAAA,IAAaN,GAAW,KAAD,EAApCO,EAAI,OACVb,EAASa,GAAM,gDAEfX,EAAS,+BAA+B,yDAE3C,kBAPgB,mCAQjBS,GATA,CAUF,GAAG,CAACL,IAEJ,IAIMQ,EAAWf,EAAMgB,KAAI,gBAAGC,EAAE,EAAFA,GAAIC,EAAK,EAALA,MAAK,OACrC,SAAC,KAAI,CAAUC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMZ,GAAW,UAC5D,wBAAKS,KADID,EAEJ,IAGT,OACE,iCACE,SAACK,EAAgB,CAACnC,SAZD,SAAAE,GACnBiB,EAAgB,CAAEjB,MAAAA,GACpB,KAWI,wBAAK0B,IACJb,IAAS,uBAAIA,MAGpB,C,+LC5CaqB,EAAc,mCAAG,sGACPC,EAAAA,EAAAA,IAAU,4FAE7B,KAAD,EAFU,OAEV,SAFMV,EAAI,EAAJA,KAAI,kBAIJA,EAAKW,SAAO,2CACpB,kBAN0B,mCAQdC,EAAY,mCAAG,WAAOT,GAAE,yFACdO,EAAAA,EAAAA,IAAU,uCAAD,OACWP,EAAE,6DACzC,KAAD,EAFU,OAEV,SAFMH,EAAI,EAAJA,KAAI,kBAIJA,GAAI,2CACZ,gBANwB,sCAQZa,EAAS,mCAAG,WAAOV,GAAE,yFACXO,EAAAA,EAAAA,IAAU,uCAAD,OACWP,EAAE,qEACzC,KAAD,EAFU,OAEV,SAFMH,EAAI,EAAJA,KAAI,kBAIJA,EAAKc,MAAI,2CACjB,gBANqB,sCAQTC,EAAY,mCAAG,WAAOZ,GAAE,yFACdO,EAAAA,EAAAA,IAAU,uCAAD,OACWP,EAAE,qEACzC,KAAD,EAFU,OAEV,SAFMH,EAAI,EAAJA,KAAI,kBAIJA,EAAKW,SAAO,2CACpB,gBANwB,sCAQZZ,EAAY,mCAAG,WAAOxB,GAAK,yFACjBmC,EAAAA,EAAAA,IAAU,2GAAD,OAC+EnC,EAAK,gCAChH,KAAD,EAFU,OAEV,SAFMyB,EAAI,EAAJA,KAAI,kBAIJA,EAAKW,SAAO,2CACpB,gBANwB,qC","sources":["components/SearchMovie.jsx","components/Pages/MoviesPage.jsx","components/Shared/Api.js"],"sourcesContent":["import { useState } from 'react';\n\nconst SearchMoviesForm = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChange = e => {\n    setQuery(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit(query);\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <button type=\"submit\">Search</button>\n\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          onChange={handleChange}\n          value={query}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default SearchMoviesForm;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Link, useLocation } from 'react-router-dom';\nimport { searchMovies } from 'components/Shared/Api';\nimport SearchMoviesForm from 'components/SearchMovie';\n\nconst MoviesPage = () => {\n  const [items, setItems] = useState([]);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query');\n\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!movieName) {\n      return;\n    }\n    const fetchMovies = async () => {\n      try {\n        const data = await searchMovies(movieName);\n        setItems(data);\n      } catch (error) {\n        setError('Ooops, something went wrong');\n      }\n    };\n    fetchMovies();\n  }, [movieName]);\n\n  const handleSearch = query => {\n    setSearchParams({ query });\n  };\n\n  const elements = items.map(({ id, title }) => (\n    <Link key={id} to={`/movies/${id}`} state={{ from: location }}>\n      <li>{title}</li>\n    </Link>\n  ));\n\n  return (\n    <>\n      <SearchMoviesForm onSubmit={handleSearch} />\n      <ul>{elements}</ul>\n      {error && <p>{error}</p>}\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nexport const trendingMovies = async () => {\n  const {data} = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=c60edd70b8b52249425a4fc37989f133`\n  );\n\n  return data.results;\n};\n\nexport const movieDetails = async (id) => {\n  const {data} = await axios.get(\n    `https://api.themoviedb.org/3/movie//${id}?api_key=c60edd70b8b52249425a4fc37989f133&language=en-US`\n  );\n\n  return data;\n};\n\nexport const movieCast = async (id) => {\n  const {data} = await axios.get(\n    `https://api.themoviedb.org/3/movie//${id}/credits?api_key=c60edd70b8b52249425a4fc37989f133&language=en-US`\n  );\n\n  return data.cast;\n};\n\nexport const movieReviews = async (id) => {\n  const {data} = await axios.get(\n    `https://api.themoviedb.org/3/movie//${id}/reviews?api_key=c60edd70b8b52249425a4fc37989f133&language=en-US`\n  );\n\n  return data.results;\n};\n\nexport const searchMovies = async (query) => {\n  const {data} = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=c60edd70b8b52249425a4fc37989f133&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return data.results;\n};\n\n\n\n"],"names":["onSubmit","useState","query","setQuery","e","preventDefault","type","autoComplete","autoFocus","placeholder","onChange","target","value","items","setItems","error","setError","useSearchParams","searchParams","setSearchParams","movieName","get","location","useLocation","useEffect","fetchMovies","searchMovies","data","elements","map","id","title","to","state","from","SearchMovie","trendingMovies","axios","results","movieDetails","movieCast","cast","movieReviews"],"sourceRoot":""}